{"ast":null,"code":"var _jsxFileName = \"C:\\\\Final Project\\\\frontend\\\\src\\\\screens\\\\RegisterScreen\\\\RegisterScreen.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from 'react';\nimport { Button, Col, Row, Form } from \"react-bootstrap\";\nimport { Link, useHistory } from \"react-router-dom\";\nimport Loading from \"../../components/Loading\";\nimport ErrorMessage from \"../../components/ErrorMessage\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { register } from '../../actions/userActions';\nimport MainScreen from '../../components/MainScreen';\nimport \"./RegisterScreen.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst RegisterScreen = () => {\n  _s();\n\n  const [email, setEmail] = useState(\"\");\n  const [name, setName] = useState(\"\");\n  const [password, setPassword] = useState(\"\");\n  const [confirmpassword, setConfirmPassword] = useState(\"\");\n  const [message, setMessage] = useState(null);\n  const [picMessage, setPicMessage] = useState(null); //const [error,setError]=useState(false);\n  //const [loading,setLoading]=useState(false);\n\n  const dispatch = useDispatch();\n  const userRegister = useSelector(state => state.userRegister);\n  const {\n    loading,\n    error,\n    userInfo\n  } = userRegister;\n  const history = useHistory();\n  useEffect(() => {\n    if (userInfo) {\n      history.push(\"/\");\n    }\n  }, [history, userInfo]);\n\n  const submitHandler = async e => {\n    e.preventDefault();\n\n    if (password !== confirmpassword) {\n      setMessage('Password do not match');\n    } else {\n      dispatch(register(name, email, password));\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(MainScreen, {\n    title: \"REGISTER\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"loginContainer\",\n      children: [error && /*#__PURE__*/_jsxDEV(ErrorMessage, {\n        variant: \"danger\",\n        children: error\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 15\n      }, this), message && /*#__PURE__*/_jsxDEV(ErrorMessage, {\n        variant: \"danger\",\n        children: message\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 17\n      }, this), loading && /*#__PURE__*/_jsxDEV(Loading, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 16\n      }, this), /*#__PURE__*/_jsxDEV(Form, {\n        onSubmit: submitHandler,\n        children: [/*#__PURE__*/_jsxDEV(Form.Group, {\n          controlId: \"name\",\n          children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n            children: \"Name\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 63,\n            columnNumber: 9\n          }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n            type: \"name\",\n            value: name,\n            placeholder: \"Enter name\",\n            onChange: e => setName(e.target.value)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 64,\n            columnNumber: 9\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 62,\n          columnNumber: 7\n        }, this), /*#__PURE__*/_jsxDEV(Form.Group, {\n          controlId: \"formBasicEmail\",\n          children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n            children: \"Email address\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 73,\n            columnNumber: 9\n          }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n            type: \"email\",\n            value: email,\n            placeholder: \"Enter email\",\n            onChange: e => setEmail(e.target.value)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 74,\n            columnNumber: 9\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 72,\n          columnNumber: 7\n        }, this), /*#__PURE__*/_jsxDEV(Form.Group, {\n          controlId: \"formBasicPassword\",\n          children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n            children: \"Password\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 83,\n            columnNumber: 9\n          }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n            type: \"password\",\n            value: password,\n            placeholder: \"Password\",\n            onChange: e => setPassword(e.target.value)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 84,\n            columnNumber: 9\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 82,\n          columnNumber: 7\n        }, this), /*#__PURE__*/_jsxDEV(Form.Group, {\n          controlId: \"confirmPassword\",\n          children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n            children: \"Confirm Password\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 93,\n            columnNumber: 9\n          }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n            type: \"password\",\n            value: confirmpassword,\n            placeholder: \"Confirm Password\",\n            onChange: e => setConfirmPassword(e.target.value)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 94,\n            columnNumber: 9\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 92,\n          columnNumber: 7\n        }, this), picMessage && /*#__PURE__*/_jsxDEV(ErrorMessage, {\n          variant: \"danger\",\n          children: picMessage\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 103,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(Button, {\n          variant: \"primary\",\n          type: \"submit\",\n          className: \"mt-3\",\n          children: \"Register\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 107,\n          columnNumber: 7\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 5\n      }, this), /*#__PURE__*/_jsxDEV(Row, {\n        className: \"py-3\",\n        children: /*#__PURE__*/_jsxDEV(Col, {\n          children: [\"Have an Account ? \", /*#__PURE__*/_jsxDEV(Link, {\n            to: \"/login\",\n            children: \"Login\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 113,\n            columnNumber: 27\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 112,\n          columnNumber: 7\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 111,\n        columnNumber: 5\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 5\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 56,\n    columnNumber: 5\n  }, this);\n};\n\n_s(RegisterScreen, \"RRxjy4+UW+20KhMhnmz8j9zWKaM=\", false, function () {\n  return [useDispatch, useSelector, useHistory];\n});\n\n_c = RegisterScreen;\nexport default RegisterScreen;\n\nvar _c;\n\n$RefreshReg$(_c, \"RegisterScreen\");","map":{"version":3,"sources":["C:/Final Project/frontend/src/screens/RegisterScreen/RegisterScreen.js"],"names":["React","useState","useEffect","Button","Col","Row","Form","Link","useHistory","Loading","ErrorMessage","useDispatch","useSelector","register","MainScreen","RegisterScreen","email","setEmail","name","setName","password","setPassword","confirmpassword","setConfirmPassword","message","setMessage","picMessage","setPicMessage","dispatch","userRegister","state","loading","error","userInfo","history","push","submitHandler","e","preventDefault","target","value"],"mappings":"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","sourcesContent":["\r\nimport React ,{useState, useEffect}from 'react';\r\nimport {  Button, Col, Row, Form } from \"react-bootstrap\";\r\nimport { Link ,useHistory} from \"react-router-dom\";\r\nimport Loading from \"../../components/Loading\";\r\nimport ErrorMessage from \"../../components/ErrorMessage\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { register } from '../../actions/userActions'\r\nimport MainScreen from '../../components/MainScreen'\r\nimport \"./RegisterScreen.css\";\r\n\r\n\r\nconst RegisterScreen = () =>{\r\n  const [email, setEmail] = useState(\"\");\r\n  const [name, setName] = useState(\"\");\r\n \r\n  const [password, setPassword] = useState(\"\");\r\n  const [confirmpassword, setConfirmPassword] = useState(\"\");\r\n  const [message, setMessage] = useState(null);\r\n  const [picMessage, setPicMessage] = useState(null);\r\n  //const [error,setError]=useState(false);\r\n  //const [loading,setLoading]=useState(false);\r\n\r\n\r\n  \r\n\r\n  const dispatch= useDispatch();\r\n  const userRegister=useSelector(state=>state.userRegister);\r\n  const {loading,error,userInfo}=userRegister;\r\n  const history = useHistory();\r\n\r\n  useEffect(()=>{\r\n    if (userInfo){\r\n      history.push(\"/\");\r\n    }\r\n\r\n  }, [history, userInfo])\r\n\r\n  const submitHandler=async(e)=>{\r\n  e.preventDefault()\r\n\r\n  if(password!==confirmpassword){\r\n    setMessage('Password do not match')\r\n  }else{\r\n    dispatch(register(name,email,password));\r\n  }\r\n \r\n  \r\n  }\r\n\r\n\r\n\r\n\r\n\r\nreturn (\r\n    <MainScreen title=\"REGISTER\"> \r\n    <div className=\"loginContainer\">\r\n    {error && <ErrorMessage variant=\"danger\">{error}</ErrorMessage>}\r\n    {message && <ErrorMessage variant=\"danger\">{message}</ErrorMessage>}\r\n   {loading && <Loading />}\r\n    <Form onSubmit={submitHandler}>\r\n      <Form.Group controlId=\"name\">\r\n        <Form.Label>Name</Form.Label>\r\n        <Form.Control\r\n          type=\"name\"\r\n         value={name}\r\n          placeholder=\"Enter name\"\r\n          onChange={(e) => setName(e.target.value)}\r\n        />\r\n      </Form.Group>\r\n\r\n      <Form.Group controlId=\"formBasicEmail\">\r\n        <Form.Label>Email address</Form.Label>\r\n        <Form.Control\r\n          type=\"email\"\r\n          value={email}\r\n          placeholder=\"Enter email\"\r\n          onChange={(e) => setEmail(e.target.value)}\r\n        />\r\n      </Form.Group>\r\n\r\n      <Form.Group controlId=\"formBasicPassword\">\r\n        <Form.Label>Password</Form.Label>\r\n        <Form.Control\r\n          type=\"password\"\r\n          value={password}\r\n          placeholder=\"Password\"\r\n          onChange={(e) => setPassword(e.target.value)}\r\n        />\r\n      </Form.Group>\r\n\r\n      <Form.Group controlId=\"confirmPassword\">\r\n        <Form.Label>Confirm Password</Form.Label>\r\n        <Form.Control\r\n          type=\"password\"\r\n          value={confirmpassword}\r\n          placeholder=\"Confirm Password\"\r\n          onChange={(e) => setConfirmPassword(e.target.value)}\r\n        />\r\n      </Form.Group>\r\n\r\n      {picMessage && (\r\n        <ErrorMessage variant=\"danger\">{picMessage}</ErrorMessage>\r\n      )}\r\n    \r\n\r\n      <Button variant=\"primary\" type=\"submit\" className='mt-3'>\r\n        Register\r\n      </Button>\r\n    </Form>\r\n    <Row className=\"py-3\">\r\n      <Col>\r\n        Have an Account ? <Link to=\"/login\">Login</Link>\r\n      </Col>\r\n    </Row>\r\n  </div>\r\n    \r\n    \r\n    \r\n    \r\n    \r\n    \r\n    \r\n    \r\n    \r\n    \r\n    </MainScreen>\r\n       \r\n  )}\r\n            \r\n\r\nexport default RegisterScreen;\r\n"]},"metadata":{},"sourceType":"module"}