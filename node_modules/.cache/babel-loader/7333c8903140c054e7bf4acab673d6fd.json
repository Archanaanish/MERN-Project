{"ast":null,"code":"var _jsxFileName = \"C:\\\\Final Project\\\\frontend\\\\src\\\\screens\\\\ProfileScreen\\\\ProfileScreen.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from 'react';\nimport { useDispatch, useSelector } from \"react-redux\";\nimport \"./ProfileScreen.css\";\nimport MainScreen from \"../../components/MainScreen\";\nimport { updateProfile } from \"../../actions/userActions\";\nimport { Col, Row, Button, Form } from 'react-bootstrap';\nimport Loading from \"../../components/Loading\";\nimport ErrorMessage from \"../../components/ErrorMessage\";\nimport { useHistory } from 'react-router-dom';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst ProfileScreen = () => {\n  _s();\n\n  const [name, setName] = useState(\"\");\n  const [email, setEmail] = useState(\"\");\n  const [password, setPassword] = useState(\"\");\n  const [confirmPassword, setConfirmPassword] = useState(\"\");\n  const [picMessage, setPicMessage] = useState();\n  const dispatch = useDispatch();\n  const userLogin = useSelector(state => state.userLogin);\n  const {\n    userInfo\n  } = userLogin;\n  const userUpdate = useSelector(state => state.userUpdate);\n  const {\n    loading,\n    error,\n    success\n  } = userUpdate;\n  const history = useHistory();\n  useEffect(() => {\n    if (!userInfo) {\n      history.push(\"/\");\n    } else {\n      setName(userInfo.name);\n      setEmail(userInfo.email);\n    }\n  }, [history, userInfo]);\n\n  const submitHandler = e => {\n    e.preventDefault();\n    if (password === confirmPassword) dispatch(updateProfile({\n      name,\n      email,\n      password\n    }));\n  };\n\n  return /*#__PURE__*/_jsxDEV(MainScreen, {\n    title: \"EDIT PROFILE\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      children: /*#__PURE__*/_jsxDEV(Row, {\n        className: \"profileContainer\",\n        children: /*#__PURE__*/_jsxDEV(Col, {\n          lg: 6,\n          children: /*#__PURE__*/_jsxDEV(Form, {\n            onSubmit: submitHandler,\n            children: [loading && /*#__PURE__*/_jsxDEV(Loading, {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 61,\n              columnNumber: 27\n            }, this), success && /*#__PURE__*/_jsxDEV(ErrorMessage, {\n              variant: \"success\",\n              children: \"Updated Successfully\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 63,\n              columnNumber: 17\n            }, this), error && /*#__PURE__*/_jsxDEV(ErrorMessage, {\n              variant: \"danger\",\n              children: error\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 67,\n              columnNumber: 25\n            }, this), /*#__PURE__*/_jsxDEV(Form.Group, {\n              controlId: \"name\",\n              children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n                className: \"mt-2\",\n                children: \"Name\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 69,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n                type: \"text\",\n                placeholder: \"Enter Name\",\n                value: name,\n                onChange: e => setName(e.target.value)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 70,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 68,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(Form.Group, {\n              controlId: \"email\",\n              children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n                className: \"mt-2\",\n                children: \"Email Address\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 78,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n                type: \"email\",\n                placeholder: \"Enter Email\",\n                value: email,\n                onChange: e => setEmail(e.target.value)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 79,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 77,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(Form.Group, {\n              controlId: \"password\",\n              children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n                className: \"mt-2\",\n                children: \"Password\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 87,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n                type: \"password\",\n                placeholder: \"Enter Password\",\n                value: password,\n                onChange: e => setPassword(e.target.value)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 88,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 86,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(Form.Group, {\n              controlId: \"confirmPassword\",\n              children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n                className: \"mt-2\",\n                children: \"Confirm Password\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 96,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n                type: \"password\",\n                placeholder: \"Confirm Password\",\n                value: confirmPassword,\n                onChange: e => setConfirmPassword(e.target.value)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 97,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 95,\n              columnNumber: 15\n            }, this), \" \", picMessage && /*#__PURE__*/_jsxDEV(ErrorMessage, {\n              variant: \"danger\",\n              children: picMessage\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 105,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(Button, {\n              className: \"mt-4\",\n              type: \"submit\",\n              varient: \"primary\",\n              children: \"Update\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 107,\n              columnNumber: 16\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 60,\n            columnNumber: 21\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 59,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 56,\n    columnNumber: 9\n  }, this);\n};\n\n_s(ProfileScreen, \"jsgvgPSIgz7BzilB1TXgat5T8ao=\", false, function () {\n  return [useDispatch, useSelector, useSelector, useHistory];\n});\n\n_c = ProfileScreen;\nexport default ProfileScreen;\n\nvar _c;\n\n$RefreshReg$(_c, \"ProfileScreen\");","map":{"version":3,"sources":["C:/Final Project/frontend/src/screens/ProfileScreen/ProfileScreen.js"],"names":["React","useState","useEffect","useDispatch","useSelector","MainScreen","updateProfile","Col","Row","Button","Form","Loading","ErrorMessage","useHistory","ProfileScreen","name","setName","email","setEmail","password","setPassword","confirmPassword","setConfirmPassword","picMessage","setPicMessage","dispatch","userLogin","state","userInfo","userUpdate","loading","error","success","history","push","submitHandler","e","preventDefault","target","value"],"mappings":"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","sourcesContent":["import React,{useState, useEffect} from 'react';\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport \"./ProfileScreen.css\";\r\nimport MainScreen from \"../../components/MainScreen\";\r\nimport { updateProfile } from \"../../actions/userActions\";\r\nimport { Col, Row, Button, Form } from 'react-bootstrap';\r\nimport Loading from \"../../components/Loading\";\r\nimport ErrorMessage from \"../../components/ErrorMessage\";\r\nimport { useHistory } from 'react-router-dom';\r\n\r\nconst ProfileScreen = () => {\r\n    const [name, setName] = useState(\"\");\r\n    const [email, setEmail] = useState(\"\");\r\n    const [password, setPassword] = useState(\"\");\r\n    const [confirmPassword, setConfirmPassword] = useState(\"\");\r\n    const [picMessage, setPicMessage] = useState();\r\n\r\n\r\n\r\n    const dispatch = useDispatch();\r\n\r\n    const userLogin = useSelector((state) => state.userLogin);\r\n    const { userInfo } = userLogin;\r\n\r\n    const userUpdate = useSelector((state) => state.userUpdate);\r\n    const { loading, error, success } = userUpdate;\r\n\r\n    const history = useHistory()\r\n\r\n    useEffect(() => {\r\n        if (!userInfo) {\r\n          history.push(\"/\");\r\n        } else {\r\n          setName(userInfo.name);\r\n          setEmail(userInfo.email);\r\n          \r\n        }\r\n      }, [history, userInfo]);\r\n    \r\n     \r\n     \r\n     \r\n     \r\n     \r\n      const submitHandler = (e) => {\r\n        e.preventDefault();\r\n\r\n        if(password===confirmPassword)\r\n        dispatch(updateProfile({ name, email, password}));\r\n      };\r\n   \r\n   \r\n   \r\n   \r\n      return (\r\n        <MainScreen  title=\"EDIT PROFILE\">\r\n            <div>\r\n                <Row className='profileContainer'>\r\n                    <Col lg={6}>\r\n                    <Form onSubmit={submitHandler} >\r\n              {loading && <Loading />}\r\n              {success && (\r\n                <ErrorMessage variant=\"success\">\r\n                  Updated Successfully\r\n                </ErrorMessage>\r\n              )}\r\n              {error && <ErrorMessage variant=\"danger\">{error}</ErrorMessage>}\r\n              <Form.Group controlId=\"name\">\r\n                <Form.Label className='mt-2'>Name</Form.Label>\r\n                <Form.Control\r\n                  type=\"text\"\r\n                  placeholder=\"Enter Name\"\r\n                  value={name}\r\n                  onChange={(e) => setName(e.target.value)}\r\n                ></Form.Control>\r\n              </Form.Group>\r\n              <Form.Group controlId=\"email\">\r\n                <Form.Label className='mt-2'>Email Address</Form.Label>\r\n                <Form.Control\r\n                  type=\"email\"\r\n                  placeholder=\"Enter Email\"\r\n                  value={email}\r\n                  onChange={(e) => setEmail(e.target.value)}\r\n                ></Form.Control>\r\n              </Form.Group>\r\n              <Form.Group controlId=\"password\">\r\n                <Form.Label className='mt-2'>Password</Form.Label>\r\n                <Form.Control\r\n                  type=\"password\"\r\n                  placeholder=\"Enter Password\"\r\n                  value={password}\r\n                  onChange={(e) => setPassword(e.target.value)}\r\n                ></Form.Control>\r\n              </Form.Group>\r\n              <Form.Group controlId=\"confirmPassword\">\r\n                <Form.Label className='mt-2'>Confirm Password</Form.Label>\r\n                <Form.Control\r\n                  type=\"password\"\r\n                  placeholder=\"Confirm Password\"\r\n                  value={confirmPassword}\r\n                  onChange={(e) => setConfirmPassword(e.target.value)}\r\n                ></Form.Control>\r\n              </Form.Group>{\" \"}\r\n              {picMessage && (\r\n                <ErrorMessage variant=\"danger\">{picMessage}</ErrorMessage>\r\n              )}\r\n               <Button className='mt-4' type=\"submit\" varient=\"primary\">\r\n                Update\r\n              </Button>\r\n            </Form>\r\n          </Col>\r\n                    \r\n\r\n\r\n\r\n                </Row>\r\n            </div>\r\n        </MainScreen>\r\n    )\r\n}\r\n\r\nexport default ProfileScreen\r\n"]},"metadata":{},"sourceType":"module"}