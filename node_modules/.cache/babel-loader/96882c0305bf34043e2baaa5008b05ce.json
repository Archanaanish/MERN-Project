{"ast":null,"code":"import { createStore, combineReducers, applyMiddleware } from 'redux';\nimport thunk from \"redux-thunk\";\nimport { composeWithDevTools } from \"redux-devtools-extension\";\nimport { userLoginReducer, userRegisterReducer, userUpdateReducer } from './reducers/userReducers';\nimport { noteCreateReducer, noteDeleteReducer, noteListReducer, noteUpdateReducer } from './reducers/notesReducers';\nconst reducer = combineReducers({\n  userLogin: userLoginReducer,\n  userRegister: userRegisterReducer,\n  noteList: noteListReducer,\n  noteCreate: noteCreateReducer,\n  noteUpdate: noteUpdateReducer,\n  noteDelete: noteDeleteReducer,\n  userUpdate: userUpdateReducer\n});\nconst userInfoFromStorage = localStorage.getItem('userInfo') ? JSON.parse(localStorage.getItem(\"userInfo\")) : null;\nconst initialState = {\n  userLogin: {\n    userInfo: userInfoFromStorage\n  }\n};\nconst middleware = [thunk];\nconst store = createStore(reducer, initialState, composeWithDevTools(applyMiddleware(...middleware)));\nexport default store;","map":{"version":3,"sources":["C:/Final Project/frontend/src/store.js"],"names":["createStore","combineReducers","applyMiddleware","thunk","composeWithDevTools","userLoginReducer","userRegisterReducer","userUpdateReducer","noteCreateReducer","noteDeleteReducer","noteListReducer","noteUpdateReducer","reducer","userLogin","userRegister","noteList","noteCreate","noteUpdate","noteDelete","userUpdate","userInfoFromStorage","localStorage","getItem","JSON","parse","initialState","userInfo","middleware","store"],"mappings":"AAAA,SAAQA,WAAR,EAAqBC,eAArB,EAAsCC,eAAtC,QAA4D,OAA5D;AACA,OAAOC,KAAP,MAAkB,aAAlB;AACA,SAASC,mBAAT,QAAoC,0BAApC;AACA,SAASC,gBAAT,EAA2BC,mBAA3B,EAAgDC,iBAAhD,QAAyE,yBAAzE;AACA,SAAUC,iBAAV,EAA4BC,iBAA5B,EAA8CC,eAA9C,EAA+DC,iBAA/D,QAAuF,0BAAvF;AAEA,MAAMC,OAAO,GAAGX,eAAe,CAAC;AAChCY,EAAAA,SAAS,EAAGR,gBADoB;AAEhCS,EAAAA,YAAY,EAACR,mBAFmB;AAGhCS,EAAAA,QAAQ,EAAEL,eAHsB;AAIhCM,EAAAA,UAAU,EAAER,iBAJoB;AAKhCS,EAAAA,UAAU,EAAEN,iBALoB;AAMhCO,EAAAA,UAAU,EAAET,iBANoB;AAOhCU,EAAAA,UAAU,EAAEZ;AAPoB,CAAD,CAA/B;AAYA,MAAMa,mBAAmB,GAAGC,YAAY,CAACC,OAAb,CAAqB,UAArB,IAAiCC,IAAI,CAACC,KAAL,CAAWH,YAAY,CAACC,OAAb,CAAqB,UAArB,CAAX,CAAjC,GAA8E,IAA1G;AAEA,MAAMG,YAAY,GAAG;AACnBZ,EAAAA,SAAS,EAAC;AAACa,IAAAA,QAAQ,EAAEN;AAAX;AADS,CAArB;AAMA,MAAMO,UAAU,GAAG,CAACxB,KAAD,CAAnB;AAIA,MAAMyB,KAAK,GAAG5B,WAAW,CACrBY,OADqB,EAErBa,YAFqB,EAGrBrB,mBAAmB,CAACF,eAAe,CAAC,GAAGyB,UAAJ,CAAhB,CAHE,CAAzB;AAQE,eAAeC,KAAf","sourcesContent":["import {createStore, combineReducers, applyMiddleware} from 'redux';\r\nimport thunk from \"redux-thunk\";\r\nimport { composeWithDevTools } from \"redux-devtools-extension\";\r\nimport { userLoginReducer, userRegisterReducer, userUpdateReducer } from './reducers/userReducers';\r\nimport {  noteCreateReducer,noteDeleteReducer,noteListReducer, noteUpdateReducer} from './reducers/notesReducers'\r\n\r\nconst reducer = combineReducers({\r\nuserLogin : userLoginReducer,\r\nuserRegister:userRegisterReducer,\r\nnoteList: noteListReducer,\r\nnoteCreate: noteCreateReducer,\r\nnoteUpdate: noteUpdateReducer,\r\nnoteDelete: noteDeleteReducer,\r\nuserUpdate: userUpdateReducer,\r\n\r\n\r\n});\r\n\r\nconst userInfoFromStorage = localStorage.getItem('userInfo')?JSON.parse(localStorage.getItem(\"userInfo\")):null;\r\n\r\nconst initialState = {\r\n  userLogin:{userInfo: userInfoFromStorage},\r\n};\r\n\r\n\r\n\r\nconst middleware = [thunk];\r\n\r\n\r\n\r\nconst store = createStore(\r\n    reducer,\r\n    initialState,\r\n    composeWithDevTools(applyMiddleware(...middleware))\r\n  );\r\n\r\n\r\n\r\n  export default store;"]},"metadata":{},"sourceType":"module"}