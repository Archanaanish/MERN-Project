{"ast":null,"code":"var _jsxFileName = \"C:\\\\Final Project\\\\frontend\\\\src\\\\screens\\\\RegisterScreen\\\\RegisterScreen.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from 'react';\nimport { Button, Col, Row, Form } from \"react-bootstrap\";\nimport { Link } from \"react-router-dom\";\nimport Loading from \"../../components/Loading\";\nimport ErrorMessage from \"../../components/ErrorMessage\";\nimport MainScreen from '../../components/MainScreen';\nimport \"./RegisterScreen.css\";\nimport axios from 'axios';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst RegisterScreen = () => {\n  _s();\n\n  const [email, setEmail] = useState(\"\");\n  const [name, setName] = useState(\"\");\n  const [pic, setPic] = useState(\"https://icon-library.com/images/anonymous-avatar-icon/anonymous-avatar-icon-25.jpg\");\n  const [password, setPassword] = useState(\"\");\n  const [confirmpassword, setConfirmPassword] = useState(\"\");\n  const [message, setMessage] = useState(null);\n  const [picMessage, setPicMessage] = useState(null);\n  const [error, setError] = useState(false);\n  const [loading, setLoading] = useState(false);\n\n  const submitHandler = async e => {\n    e.preventDefault();\n\n    if (password !== confirmpassword) {\n      setMessage('Passwords do not match');\n    } else {\n      setMessage(null);\n\n      try {\n        const config = {\n          headers: {\n            \"Content-type\": \"application/json\"\n          }\n        };\n        setLoading(true);\n        const {\n          data\n        } = await axios.post(\"/api/users\", {\n          name,\n          pic,\n          email,\n          password\n        }, config);\n        setLoading(false);\n        localStorage.setItem('userInfo', JSON.stringify(data));\n      } catch (error) {\n        setError(error.response.data.message);\n      }\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(MainScreen, {\n    title: \"REGISTER\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"loginContainer\",\n      children: [error && /*#__PURE__*/_jsxDEV(ErrorMessage, {\n        variant: \"danger\",\n        children: error\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 15\n      }, this), message && /*#__PURE__*/_jsxDEV(ErrorMessage, {\n        variant: \"danger\",\n        children: message\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 17\n      }, this), loading && /*#__PURE__*/_jsxDEV(Loading, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(Form, {\n        onSubmit: submitHandler,\n        children: [/*#__PURE__*/_jsxDEV(Form.Group, {\n          controlId: \"name\",\n          children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n            children: \"Name\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 66,\n            columnNumber: 9\n          }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n            type: \"name\",\n            value: name,\n            placeholder: \"Enter name\",\n            onChange: e => setName(e.target.value)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 67,\n            columnNumber: 9\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 65,\n          columnNumber: 7\n        }, this), /*#__PURE__*/_jsxDEV(Form.Group, {\n          controlId: \"formBasicEmail\",\n          children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n            children: \"Email address\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 76,\n            columnNumber: 9\n          }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n            type: \"email\",\n            value: email,\n            placeholder: \"Enter email\",\n            onChange: e => setEmail(e.target.value)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 77,\n            columnNumber: 9\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 75,\n          columnNumber: 7\n        }, this), /*#__PURE__*/_jsxDEV(Form.Group, {\n          controlId: \"formBasicPassword\",\n          children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n            children: \"Password\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 86,\n            columnNumber: 9\n          }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n            type: \"password\",\n            value: password,\n            placeholder: \"Password\",\n            onChange: e => setPassword(e.target.value)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 87,\n            columnNumber: 9\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 85,\n          columnNumber: 7\n        }, this), /*#__PURE__*/_jsxDEV(Form.Group, {\n          controlId: \"confirmPassword\",\n          children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n            children: \"Confirm Password\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 96,\n            columnNumber: 9\n          }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n            type: \"password\",\n            value: confirmpassword,\n            placeholder: \"Confirm Password\",\n            onChange: e => setConfirmPassword(e.target.value)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 97,\n            columnNumber: 9\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 95,\n          columnNumber: 7\n        }, this), /*#__PURE__*/_jsxDEV(Form.Group, {\n          controlId: \"pic\",\n          children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n            children: \"Profile Picture\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 109,\n            columnNumber: 5\n          }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n            type: \"file\" // onChange={(e) => postDetails(e.target.files[0])}\n\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 110,\n            columnNumber: 5\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 108,\n          columnNumber: 6\n        }, this), /*#__PURE__*/_jsxDEV(Button, {\n          variant: \"primary\",\n          type: \"submit\",\n          className: \"mt-3\",\n          children: \"Register\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 116,\n          columnNumber: 7\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 5\n      }, this), /*#__PURE__*/_jsxDEV(Row, {\n        className: \"py-3\",\n        children: /*#__PURE__*/_jsxDEV(Col, {\n          children: [\"Have an Account ? \", /*#__PURE__*/_jsxDEV(Link, {\n            to: \"/login\",\n            children: \"Login\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 122,\n            columnNumber: 27\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 121,\n          columnNumber: 7\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 120,\n        columnNumber: 5\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 5\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 59,\n    columnNumber: 5\n  }, this);\n};\n\n_s(RegisterScreen, \"B+wgR9bKcHG9iX4L1lhksOKlMrE=\");\n\n_c = RegisterScreen;\nexport default RegisterScreen;\n\nvar _c;\n\n$RefreshReg$(_c, \"RegisterScreen\");","map":{"version":3,"sources":["C:/Final Project/frontend/src/screens/RegisterScreen/RegisterScreen.js"],"names":["React","useState","Button","Col","Row","Form","Link","Loading","ErrorMessage","MainScreen","axios","RegisterScreen","email","setEmail","name","setName","pic","setPic","password","setPassword","confirmpassword","setConfirmPassword","message","setMessage","picMessage","setPicMessage","error","setError","loading","setLoading","submitHandler","e","preventDefault","config","headers","data","post","localStorage","setItem","JSON","stringify","response","target","value"],"mappings":"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","sourcesContent":["\r\nimport React ,{useState}from 'react';\r\nimport {  Button, Col, Row, Form } from \"react-bootstrap\";\r\nimport { Link } from \"react-router-dom\";\r\nimport Loading from \"../../components/Loading\";\r\nimport ErrorMessage from \"../../components/ErrorMessage\";\r\nimport MainScreen from '../../components/MainScreen'\r\nimport \"./RegisterScreen.css\";\r\nimport axios from 'axios';\r\n\r\nconst RegisterScreen = () =>{\r\n  const [email, setEmail] = useState(\"\");\r\n  const [name, setName] = useState(\"\");\r\n  const [pic, setPic] = useState(\r\n    \"https://icon-library.com/images/anonymous-avatar-icon/anonymous-avatar-icon-25.jpg\"\r\n  );\r\n  const [password, setPassword] = useState(\"\");\r\n  const [confirmpassword, setConfirmPassword] = useState(\"\");\r\n  const [message, setMessage] = useState(null);\r\n  const [picMessage, setPicMessage] = useState(null);\r\n  const [error, setError]=useState(false);\r\n  const[loading, setLoading]= useState(false);\r\n\r\n  const submitHandler=async(e)=>{\r\n  e.preventDefault()\r\n  if (password !== confirmpassword){\r\n    setMessage('Passwords do not match')\r\n  }else{\r\n     setMessage(null)\r\n     try{\r\n       const config={\r\n         headers:{\r\n           \"Content-type\": \"application/json\",\r\n         },\r\n       }\r\n       setLoading(true);\r\n       const {data} = await axios.post(\r\n         \"/api/users\",\r\n         {name,pic,email,password},\r\n         config\r\n       );\r\n       setLoading(false)\r\n       localStorage.setItem('userInfo',JSON.stringify(data));\r\n\r\n     }catch(error){\r\n      setError(error.response.data.message);\r\n\r\n     }\r\n  }\r\n \r\n  \r\n  }\r\n\r\n\r\n\r\n\r\n\r\nreturn (\r\n    <MainScreen title=\"REGISTER\"> \r\n    <div className=\"loginContainer\">\r\n    {error && <ErrorMessage variant=\"danger\">{error}</ErrorMessage>}\r\n    {message && <ErrorMessage variant=\"danger\">{message}</ErrorMessage>}\r\n{loading && <Loading />}\r\n    <Form onSubmit={submitHandler}>\r\n      <Form.Group controlId=\"name\">\r\n        <Form.Label>Name</Form.Label>\r\n        <Form.Control\r\n          type=\"name\"\r\n         value={name}\r\n          placeholder=\"Enter name\"\r\n          onChange={(e) => setName(e.target.value)}\r\n        />\r\n      </Form.Group>\r\n\r\n      <Form.Group controlId=\"formBasicEmail\">\r\n        <Form.Label>Email address</Form.Label>\r\n        <Form.Control\r\n          type=\"email\"\r\n          value={email}\r\n          placeholder=\"Enter email\"\r\n          onChange={(e) => setEmail(e.target.value)}\r\n        />\r\n      </Form.Group>\r\n\r\n      <Form.Group controlId=\"formBasicPassword\">\r\n        <Form.Label>Password</Form.Label>\r\n        <Form.Control\r\n          type=\"password\"\r\n          value={password}\r\n          placeholder=\"Password\"\r\n          onChange={(e) => setPassword(e.target.value)}\r\n        />\r\n      </Form.Group>\r\n\r\n      <Form.Group controlId=\"confirmPassword\">\r\n        <Form.Label>Confirm Password</Form.Label>\r\n        <Form.Control\r\n          type=\"password\"\r\n          value={confirmpassword}\r\n          placeholder=\"Confirm Password\"\r\n          onChange={(e) => setConfirmPassword(e.target.value)}\r\n        />\r\n      </Form.Group>\r\n\r\n      {/*{picMessage && (\r\n        <ErrorMessage variant=\"danger\">{picMessage}</ErrorMessage>\r\n      )}*/}\r\n     <Form.Group controlId=\"pic\">\r\n    <Form.Label>Profile Picture</Form.Label>\r\n    <Form.Control type=\"file\"\r\n    // onChange={(e) => postDetails(e.target.files[0])}\r\n   \r\n     />\r\n  </Form.Group>\r\n\r\n      <Button variant=\"primary\" type=\"submit\" className='mt-3'>\r\n        Register\r\n      </Button>\r\n    </Form>\r\n    <Row className=\"py-3\">\r\n      <Col>\r\n        Have an Account ? <Link to=\"/login\">Login</Link>\r\n      </Col>\r\n    </Row>\r\n  </div>\r\n    \r\n    \r\n    \r\n    \r\n    \r\n    \r\n    \r\n    \r\n    \r\n    \r\n    </MainScreen>\r\n       \r\n  )}\r\n            \r\n\r\nexport default RegisterScreen;\r\n"]},"metadata":{},"sourceType":"module"}